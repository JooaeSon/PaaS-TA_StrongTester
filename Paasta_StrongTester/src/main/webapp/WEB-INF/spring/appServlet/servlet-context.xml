<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
<context:component-scan base-package="com.min.hb"/>
<!-- 어노테이션을  -->
<mvc:annotation-driven/>

<!-- BeanNameViewResolver는 RequestMapping된 메소드에서 반환되는 String과 같은 Class를 실행시켜준다. -->
<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" >
<property name="order" value="0"/>
</bean>

<!-- order이라는 property를 설정해서  Resolver의 우선순위를 정한다 값이 작을 수록 우선순위는 높다-->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<property name="prefix" value="/WEB-INF/views/"/>
<property name="suffix" value=".jsp"/>
<property name="order" value="1"/>
</bean>

<!-- Interceptor를 통한 Controller 요청 전후에 대한 처리-->
<!-- Interceptor가 Controller를 잡고 있음 -->
<mvc:interceptors>
	<mvc:interceptor>
		<mvc:mapping path="/testAftersummit.do"/>
		<bean class="com.min.hb.interceptor.interceptor"/>
	</mvc:interceptor>
</mvc:interceptors>

<bean class="org.springframework.web.servlet.mvc.WebContentInterceptor">
	<property name="cacheSeconds" value="0"/>
</bean>

<tx:annotation-driven proxy-target-class="true"/>
</beans>
